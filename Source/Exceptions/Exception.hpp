#pragma once

#include <exception>

namespace Roguevania {
namespace Exceptions {

////////////////////////////////////////////////////////////////////////////////
/// A simple base exception class used to throw errors throughout the project.
////////////////////////////////////////////////////////////////////////////////
class Exception : public std::exception {
    
    public:
        ////////////////////////////////////////////////////////////////////////
        /// Create a new exception with a given message.
        ////////////////////////////////////////////////////////////////////////
        explicit Exception(const char* message);
        
        ////////////////////////////////////////////////////////////////////////
        /// Get the message of this exception.
        ////////////////////////////////////////////////////////////////////////
        virtual const char* what() const noexcept override;
        
    private:
        
        ////////////////////////////////////////////////////////////////////////
        /// This exceptionâ€™s message.
        ////////////////////////////////////////////////////////////////////////
        const char* message;
        
};

};
};